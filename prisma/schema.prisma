// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  walletAddress String?   @map("wallet_address")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  // Relations
  sessions      Session[]
  transactions  Transaction[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Transaction {
  id              String    @id @default(cuid())
  userId          String?   @map("user_id")
  hash            String    @unique
  from            String
  to              String
  value           String
  gasPrice        String    @map("gas_price")
  gasUsed         String?   @map("gas_used")
  status          String    @default("pending")
  network         String
  blockNumber     Int?      @map("block_number")
  contractAddress String?   @map("contract_address")
  methodName      String?   @map("method_name")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@map("transactions")
}

model Contract {
  id          String   @id @default(cuid())
  address     String   @unique
  name        String
  symbol      String?
  abi         Json
  network     String
  type        String   // e.g., "ERC20", "ERC721", "Custom"
  description String?
  verified    Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("contracts")
}

model ApiKey {
  id          String   @id @default(cuid())
  name        String
  keyHash     String   @unique @map("key_hash")
  permissions Json     @default("[]")
  lastUsedAt  DateTime? @map("last_used_at")
  expiresAt   DateTime? @map("expires_at")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("api_keys")
}
